# -*- coding: utf-8 -*-

import os, sys
#from django.utils.translation import ugettext_lazy as _

def rel(*x):
    return os.path.join(os.path.abspath(os.path.dirname(__file__)), *x)

sys.path.insert(0, rel('..', 'lib'))
gettext_noop = lambda s: s

# Django settings for ${project_name} project.

DEBUG = ${debugging}
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    ('${web_admin_name}', '${web_admin_email}'), ${additional_admins}
)

MANAGERS = ADMINS

EMAIL_HOST = ${email_host}
EMAIL_HOST_USER = ${email_host_user}
EMAIL_HOST_PASSWORD = ${email_host_password}
EMAIL_PORT = ${email_port}
EMAIL_USE_TLS = ${email_use_tls}

DATABASES = {
    'default': {
        'ENGINE': ${db_engine},
        'NAME': '${db_name}',
        'USER': '${db_user}',
        'PASSWORD': '${db_pass}',
        'HOST': '${db_host}',
        'PORT': '${db_port}',
    }
}

FIXTURE_DIRS = (
    rel('fixtures'),
)

FIRST_DAY_OF_WEEK = 1

TIME_ZONE = 'Europe/Moscow'

LANGUAGE_CODE = 'ru'

SITE_ID = 1
SITE_URL = '${web_server_url}'

USE_I18N = True
USE_L10N = True

MEDIA_ROOT = rel('static')

MEDIA_URL = '/static/'

ADMIN_MEDIA_PREFIX = '/lib/grappelli/media/'

# Make this unique, and don't share it with anybody.
SECRET_KEY = '${django_secretkey}'

if DEBUG:
    TEMPLATE_LOADERS = (
        'django.template.loaders.filesystem.Loader',
        'django.template.loaders.app_directories.Loader',
    )
else:
    TEMPLATE_LOADERS = (
        ('django.template.loaders.cached.Loader', (
            'django.template.loaders.filesystem.Loader',
            'django.template.loaders.app_directories.Loader',
        )),
    )

TEMPLATE_CONTEXT_PROCESSORS = (
    "django.core.context_processors.request",
    "django.contrib.auth.context_processors.auth",
    "django.core.context_processors.debug",
    "django.core.context_processors.i18n",
    "django.core.context_processors.media",
    "django.contrib.messages.context_processors.messages",
    'context_processors.custom',
    'adzone.context_processors.get_source_ip',
)

AUTHENTICATION_BACKENDS = (
    'accounts.backends.CustomUserBackend',
    'accounts.backends.OpenIdBackend',
    'accounts.backends.TwitterBackend',
    'accounts.backends.FacebookBackend',
    #'django.contrib.auth.backends.ModelBackend',
)


MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'openid_consumer.middleware.OpenIDMiddleware',
    'pagination.middleware.PaginationMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
)

ROOT_URLCONF = 'urls'

TEMPLATE_DIRS = (
    rel('templates'),
)

INSTALLED_APPS = (
    'admin_tools.dashboard',
    'grappelli',
    'filebrowser',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.messages',
    'django.contrib.admin',
    'django.contrib.markup',
    'django.contrib.flatpages',
    'google_analytics',
    'adzone',
    'robots',
    'sorl.thumbnail',
    'pagination',
    'socialauth',
    'openid_consumer',
    'haystack',
    'djangobb_forum',
    'accounts',
    'main',
    'news',
    'comments',
    'claims',
    'south',
    'examples',
    'utils',
    'poll'
)

HAYSTACK_SITECONF = 'search_sites'
HAYSTACK_SEARCH_ENGINE = 'xapian'
HAYSTACK_XAPIAN_PATH = rel('search_index')

EMAIL_SUBJECT_PREFIX = '[Djbook.ru]'

DATETIME_FORMAT = 'j N Y, G:i'
FEEDBACK_SUBJECT = gettext_noop(u'Feedback message from Djbook.ru')
FEEDBACK_EMAIL = 'djbook.feedback@gmail.com'

SKIP_SOUTH_TESTS = True
SOUTH_TESTS_MIGRATE = False

#grappelli settings
GRAPPELLI_ADMIN_TITLE = 'Djbook.ru'

FILEBROWSER_URL_FILEBROWSER_MEDIA = MEDIA_URL+'filebrowser/'
FILEBROWSER_PATH_TINYMCE = os.path.join(MEDIA_ROOT, 'tinymce/jscripts/tiny_mce/')
FILEBROWSER_URL_TINYMCE = ADMIN_MEDIA_PREFIX + "tinymce/jscripts/tiny_mce/"
FILEBROWSER_STRICT_PIL = True
FILEBROWSER_DIRECTORY = 'uploads/'
FILEBROWSER_VERSIONS_BASEDIR = 'fb_thumbnails/'

ADMIN_TOOLS_INDEX_DASHBOARD = 'dashboard.CustomIndexDashboard'
ADMIN_TOOLS_APP_INDEX_DASHBOARD = 'dashboard.CustomAppIndexDashboard'

#authentication settings
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
LOGIN_URL = '/auth/login/'

OPENID_REDIRECT_NEXT = '/socialauth/openid/done/'

OPENID_SREG = {"required": "nickname, email", "optional":"postcode, country", "policy_url": ""}
OPENID_AX = [{"type_uri": "http://axschema.org/contact/email", "count": 1, "required": True, "alias": "email"},
             {"type_uri": "fullname", "count": 1 , "required": False, "alias": "fullname"}]

TWITTER_CONSUMER_KEY = ${twitter_consumer_key}
TWITTER_CONSUMER_SECRET = ${twitter_consumer_secret}

#forum settings
TOPIC_PAGE_SIZE = 10
REPLY_PAGE_SIZE = 20
FLOOD_TIME = 5
RANKS_NAMES_DATA = ((30, "Member"), (100, "Senior Member"), (300, 'Star'))

RECAPTCHA_PUBLIC = ${recaptcha_public}
RECAPTCHA_PRIVATE = ${recaptcha_private}

###
# SecureLayer
###

INSTALLED_APPS += ('securelayer',)
SECURELAYER_HOST = '${securelayer_host}'
SECURELAYER_PORT = ${securelayer_port}

GPG_HOMEDIR = '${gpg_homedir}'
GPG_PASSPHRASE = '${gpg_passphrase}'

try:
    from settings_local import *
except ImportError:
    pass
